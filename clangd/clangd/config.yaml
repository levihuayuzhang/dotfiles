# https://clangd.llvm.org/config
# On Mac: ~/Library/Preferences/clangd/config.yaml
# On Linux: ~/.config/clangd/config.yaml
# user config (this) > inner project config > outer project config

# Apply this config conditionally to all C files
# If:
#   PathMatch: .*\.(c|h)$
# CompileFlags:
#   # Compiler: gcc
#   Compiler: clang
#

# ---
# Apply this config conditionally to all C++ files
# If:
#   PathMatch: .*\.(c|h)pp
# CompileFlags:
#   # Compiler: /usr/bin/g++
#   Compiler: clang++

---
# Apply this config conditionally to all CUDA files
If:
  PathMatch: .*\.cuh?
CompileFlags:
  Compiler: nvcc
  Add:
    # - "-xcuda"
    - "-std=c++20"
    - "--cuda-gpu-arch=sm_90"
    - "--cuda-path=/usr/local/cuda"
    - "-I/usr/local/cuda/include"
    - "-L/usr/local/cuda/lib64"
    # - "--no-cuda-version-check"
    # - "-Wno-unknown-warning-option"
    # - -D__clangd__"
    # - "-LC:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\lib\x64"
    # - "-IC:\Program Files\Microsoft Visual Studio\2022\Community\VC\Tools\MSVC\14.43.34808\include"
  Remove:
    - "-ccbin*"
    - "-Xfatbin*"
    - "-gencode*"
    - "--generate-code*"
    - "-expt-*"
    - "--expt-*"
    - "--compiler-options*"
    - "--expt-extended-lambda"
    - "--expt-relaxed-constexpr"
    - "-forward-unknown-to-host-compiler"
    - "-Werror=cross-execution-space-call"
    - "-rdc=*"
    - "-arch=*"
    - "-mno-*"

---
# all files
CompileFlags:
  Add:
  [
    -ferror-limit=0,
    -Wall
  ]
  Remove:
    - -fanalyzer
    - -fstack-usage
    - -fdiagnostics-color=always
    - -fstack-protector-strong
    - -fopenmp
    - -fcf-protection
    - -Wduplicated-cond
    - -Wduplicated-branches
    - -Wlogical-op
    - -Wsuggest-attribute=pure
    - -Wsuggest-attribute=const
    - -Wsuggest-attribute=noreturn
    - -Wsuggest-attribute=format
    - -Wuseless-cast
    - -Wvector-operation-performance
    - -Wzero-as-null-pointer-constant
    - -Wno-stringop-overflow
    - -Wno-psabi
Index:
  Background: Build
  StandardLibrary: true
Hover:
  ShowAKA: true
InlayHints:
  Enabled: true
  ParameterNames: true
  DeducedTypes: true
  Designators: true
  BlockEnd: true
  DefaultArguments: true
  TypeNameLimit: 0
Completion:
  AllScopes: true
  ArgumentLists: FullPlaceholders
  HeaderInsertion: IWYU
  CodePatterns: All
Diagnostics:
  UnusedIncludes: Strict
  # MissingIncludes: Strict
  Suppress:
    - "variadic_device_fn"
    - "attributes_not_allowed"
  ClangTidy:
    # Add:
    #   - "bugprone-*"
    #   - "concurrency-*"
    #   - "performance-*"
    #   - "portability-*"
    #   - "readability-*"
    #   - "clang-analyzer-*"
    #   - "cppcoreguidelines-*"
    #   - "hicpp-*"
    #   - "cert-*"
    #   - "modernize-*"
    #   - "boost-*"
    #   - "mpi-*"
    #   - "openmp-*"
    #   - "altera-*"
    #   - "abseil-*"
    #   - "linuxkernel-*"
    #   - "google-*"
    #   - "llvm-*"
    #   - "llvmlibc-*"
    #   - "misc-*"
    # Remove:
    #   - "modernize-use-trailing-return-type"
    # CheckOptions:
    #   readability-identifier-naming.VariableCase: CamelCase
    FastCheckFilter: None

