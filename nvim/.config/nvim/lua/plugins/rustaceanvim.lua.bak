return {
  'mrcjkb/rustaceanvim',
  version = '^6', -- Recommended
  lazy = false, -- This plugin is already lazy
  config = function()
    local capabilities = require('blink.cmp').get_lsp_capabilities()
    vim.g.rustaceanvim = {
      capabilities = capabilities,
      -- Plugin configuration
      tools = {
        autoSetHints = true,
        inlay_hints = {
          show_parameter_hints = true,
          -- parameter_hints_prefix = 'in: ', -- "<- "
          -- other_hints_prefix = 'out: ', -- "=> "
          type_hints = true,
        },
      },
      -- LSP configuration
      server = {
        on_attach = function(client, bufnr)
          -- vim.lsp.inlay_hint.enable(bufnr)

          -- you can also put keymaps in here
          -- keymaps
          -- local bufnr = vim.api.nvim_get_current_buf()
          vim.keymap.set('n', '<leader>a', function()
            vim.cmd.RustLsp 'codeAction' -- supports rust-analyzer's grouping
            -- or vim.lsp.buf.codeAction() if you don't want grouping.
          end, { silent = true, buffer = bufnr })
          vim.keymap.set(
            'n',
            'K', -- Override Neovim's built-in hover keymap with rustaceanvim's hover actions
            function()
              vim.cmd.RustLsp { 'hover', 'actions' }
            end,
            { silent = true, buffer = bufnr }
          )
        end,
        default_settings = {
          -- rust-analyzer language server configuration
          ['rust-analyzer'] = {
            assist = {
              importEnforceGranularity = true,
              importPrefix = 'create',
            },
            cargo = { allFeatures = true },
            checkOnSave = {
              -- default: `cargo check`
              command = 'clippy',
              allFeatures = true,
            },
            inlayHints = {
              lifetimeElisionHints = {
                enable = true,
                useParameterNames = true,
              },
              typeHints = { enable = true },
              renderColons = { enable = true },
              chainingHints = { enable = true },
              closingBraceHints = { enable = true },
              bindingModeHints = { enable = true },
              closureCaptureHints = { enable = true },
            },
          },
        },
      },
      -- DAP configuration
      dap = {},
    }
  end,
}
